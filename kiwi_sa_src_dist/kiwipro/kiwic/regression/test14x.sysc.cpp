// test14x
// Generated by CBG HPR L/S stagename=cgen2
//Kiwi Scientific Acceleration (KiwiC .net/CIL/C# to Verilog/SystemC compiler): Version alpha 0.2.18b : 5th-December-2016 Linux/X86_64:koo// 08/12/2016 06:51:33
//  /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/kiwic.exe -vnl-roundtrip=disable -report-each-step -kiwic-finish=enable -kiwic-register-colours=1 -repack-to-roms=disable test14x.exe -sim 1800 -vnl DUT.v -res2-regfile-threshold=121 -res2-combram-threshold=122 -give-backtrace -report-each-step

#include "test14x.h"

// opath operation: 10: cgen2

 void test14x::exe010()
 { 
  //  Method no 0 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2<3&&xpc10nz==2/*2:xpc10nz*/)
    xpc10nz = (1/*1:xpc10nz*/);
}

 void test14x::exe110()
 { 
  //  Method no 1 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
    xpc10nz = (2/*2:xpc10nz*/);
}

 void test14x::exe210()
 { 
  //  Method no 2 mname=test14x
    if (xpc10nz==1/*1:xpc10nz*/)
    xpc10nz = (2/*2:xpc10nz*/);
}

 void test14x::exe310()
 { 
  //  Method no 3 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    xpc10nz = (1/*1:xpc10nz*/);
}

 void test14x::exe410()
 { 
  //  Method no 4 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
     hpr_writeln("First printed value should be 32 %u", 32);
}

 void test14x::exe510()
 { 
  //  Method no 5 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
     hpr_writeln("  Pre-test hb.left=%u, harrow=%u", 32, 1003);
}

 void test14x::exe610()
 { 
  //  Method no 6 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
     hpr_writeln("  Pre-test ha.left=%u, harrow=%u", 22, 1001);
}

 void test14x::exe710()
 { 
  //  Method no 7 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2<3&&xpc10nz==2/*2:xpc10nz*/)
     hpr_writeln("  North test14x line3 : arrow[5]=%u", (((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==1/*1:USA16*/)?__SINT_CC_MAPR12NoCE1_SCALARB0_0:(((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==0/*0:USA16*/)?__SINT_CC_MAPR12NoCE0_SCALARB0_0:0/*UNDEF*/)));
}

 void test14x::exe810()
 { 
  //  Method no 8 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2<3&&xpc10nz==2/*2:xpc10nz*/)
     hpr_writeln("  North test14x line2 : arrow[1]=%u", (((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==1/*1:USA16*/)?__SINT_CC_MAPR12NoCE1_SCALARA1_0:(((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==0/*0:USA16*/)?__SINT_CC_MAPR12NoCE0_SCALARA1_0:0/*UNDEF*/)));
}

 void test14x::exe910()
 { 
  //  Method no 9 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2<3&&xpc10nz==2/*2:xpc10nz*/)
     hpr_writeln("  North test14x line1 : left=%u", ((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__SINT_CC_MAPR10NoCE1_left:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__SINT_CC_MAPR10NoCE0_left:0/*UNDEF*/)));
}

 void test14x::exe1010()
 { 
  //  Method no 10 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
     hpr_sysexit(0);
}

 void test14x::exe1110()
 { 
  //  Method no 11 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
     hpr_writeln("  North test14x line3 : arrow[5]=%u", (((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==1/*1:USA16*/)?__SINT_CC_MAPR12NoCE1_SCALARB0_0:(((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==0/*0:USA16*/)?__SINT_CC_MAPR12NoCE0_SCALARB0_0:0/*UNDEF*/)));
}

 void test14x::exe1210()
 { 
  //  Method no 12 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
     hpr_writeln("  North test14x line2 : arrow[1]=%u", (((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==1/*1:USA16*/)?__SINT_CC_MAPR12NoCE1_SCALARA1_0:(((((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE1_arrow:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__s__SINT_CC_MAPR10NoCE0_arrow:0/*UNDEF*/)))==0/*0:USA16*/)?__SINT_CC_MAPR12NoCE0_SCALARA1_0:0/*UNDEF*/)));
}

 void test14x::exe1310()
 { 
  //  Method no 13 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
     hpr_writeln("  North test14x line1 : left=%u", ((test14x_T402_Main_T402_Main_V_1a==1/*1:test14x/T402/Main/T402/Main/V_0*/)?__SINT_CC_MAPR10NoCE1_left:((test14x_T402_Main_T402_Main_V_1a==0/*0:test14x/T402/Main/T402/Main/V_0*/)?__SINT_CC_MAPR10NoCE0_left:0/*UNDEF*/)));
}

 void test14x::exe1410()
 { 
  //  Method no 14 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_2 = (0);
}

 void test14x::exe1510()
 { 
  //  Method no 15 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __SINT_CC_MAPR12NoCE1_SCALARB0_0 = (1004);
}

 void test14x::exe1610()
 { 
  //  Method no 16 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __SINT_CC_MAPR12NoCE1_SCALARA1_0 = (1003);
}

 void test14x::exe1710()
 { 
  //  Method no 17 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __SINT_CC_MAPR12NoCE0_SCALARB0_0 = (1002);
}

 void test14x::exe1810()
 { 
  //  Method no 18 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __SINT_CC_MAPR12NoCE0_SCALARA1_0 = (1001);
}

 void test14x::exe1910()
 { 
  //  Method no 19 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __SINT_CC_MAPR10NoCE1_left = (32);
}

 void test14x::exe2010()
 { 
  //  Method no 20 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __SINT_CC_MAPR10NoCE0_left = (22);
}

 void test14x::exe2110()
 { 
  //  Method no 21 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_1a = (d3.1);
}

 void test14x::exe2210()
 { 
  //  Method no 22 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __s__SINT_CC_MAPR10NoCE1_arrow = (d4.1);
}

 void test14x::exe2310()
 { 
  //  Method no 23 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_0a = (d1.0);
}

 void test14x::exe2410()
 { 
  //  Method no 24 mname=test14x
    if (xpc10nz==0/*0:xpc10nz*/)
    __s__SINT_CC_MAPR10NoCE0_arrow = (d2.0);
}

 void test14x::exe2510()
 { 
  //  Method no 25 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2<3&&xpc10nz==2/*2:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_2 = (1+test14x_T402_Main_T402_Main_V_2);
}

 void test14x::exe2610()
 { 
  //  Method no 26 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2<3&&xpc10nz==2/*2:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_1a = (test14x_T402_Main_T402_Main_V_0a);
}

 void test14x::exe2710()
 { 
  //  Method no 27 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2<3&&xpc10nz==2/*2:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_0a = (test14x_T402_Main_T402_Main_V_1a);
}

 void test14x::exe2810()
 { 
  //  Method no 28 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_2 = (1+test14x_T402_Main_T402_Main_V_2);
}

 void test14x::exe2910()
 { 
  //  Method no 29 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_1a = (test14x_T402_Main_T402_Main_V_0a);
}

 void test14x::exe3010()
 { 
  //  Method no 30 mname=test14x
    if (test14x_T402_Main_T402_Main_V_2>=3&&xpc10nz==2/*2:xpc10nz*/)
    test14x_T402_Main_T402_Main_V_0a = (test14x_T402_Main_T402_Main_V_1a);
}
// eof test14x
