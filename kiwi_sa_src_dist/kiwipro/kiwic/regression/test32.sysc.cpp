// test32
// Generated by CBG HPR L/S stagename=cgen2
//Kiwi Scientific Acceleration (KiwiC .net/CIL/C# to Verilog/SystemC compiler): Version alpha 0.2.18b : 5th-December-2016 Linux/X86_64:koo// 08/12/2016 06:55:25
//  /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/kiwic.exe -vnl-roundtrip=disable -report-each-step -kiwic-finish=enable -kiwic-register-colours=1 -repack-to-roms=disable test32.exe -max-no-int-divs=5 -diosim-vcd=test32b5.vcd -vnl-resets=synchronous -res2-loadstore-port-count=0 -vnl DUT.v -sim 4800 -give-backtrace -report-each-step

#include "test32.h"

// opath operation: 10: cgen2

 void test32::exe020()
 { 
  //  Method no 0 mname=test32
    if (xpc10nz==32/*32:xpc10nz*/)
    xpc10nz = (3/*3:xpc10nz*/);
}

 void test32::exe120()
 { 
  //  Method no 1 mname=test32
    if ((xpc10nz==31/*31:xpc10nz*/&&isDIVIDER18_rdy)||(xpc10nz==31/*31:xpc10nz*/&&isDIVIDER18RRh10vld))
    if (isDIVIDER18RRh10vld||isDIVIDER18_rdy)
    xpc10nz = (17/*17:xpc10nz*/);
}

 void test32::exe210()
 { 
  //  Method no 2 mname=test32
    if (xpc10nz==30/*30:xpc10nz*/)
    xpc10nz = (31/*31:xpc10nz*/);
}

 void test32::exe310()
 { 
  //  Method no 3 mname=test32
    if (xpc10nz==29/*29:xpc10nz*/)
    xpc10nz = (30/*30:xpc10nz*/);
}

 void test32::exe410()
 { 
  //  Method no 4 mname=test32
    if (xpc10nz==28/*28:xpc10nz*/)
    xpc10nz = (29/*29:xpc10nz*/);
}

 void test32::exe510()
 { 
  //  Method no 5 mname=test32
    if (xpc10nz==27/*27:xpc10nz*/)
    xpc10nz = (28/*28:xpc10nz*/);
}

 void test32::exe610()
 { 
  //  Method no 6 mname=test32
    if (xpc10nz==26/*26:xpc10nz*/)
    xpc10nz = (27/*27:xpc10nz*/);
}

 void test32::exe710()
 { 
  //  Method no 7 mname=test32
    if (xpc10nz==25/*25:xpc10nz*/)
    xpc10nz = (26/*26:xpc10nz*/);
}

 void test32::exe810()
 { 
  //  Method no 8 mname=test32
    if (xpc10nz==24/*24:xpc10nz*/)
    xpc10nz = (25/*25:xpc10nz*/);
}

 void test32::exe910()
 { 
  //  Method no 9 mname=test32
    if (xpc10nz==23/*23:xpc10nz*/)
    xpc10nz = (24/*24:xpc10nz*/);
}

 void test32::exe1010()
 { 
  //  Method no 10 mname=test32
    if (xpc10nz==22/*22:xpc10nz*/)
    xpc10nz = (23/*23:xpc10nz*/);
}

 void test32::exe1110()
 { 
  //  Method no 11 mname=test32
    if (xpc10nz==21/*21:xpc10nz*/)
    xpc10nz = (22/*22:xpc10nz*/);
}

 void test32::exe1210()
 { 
  //  Method no 12 mname=test32
    if (xpc10nz==20/*20:xpc10nz*/)
    xpc10nz = (21/*21:xpc10nz*/);
}

 void test32::exe1310()
 { 
  //  Method no 13 mname=test32
    if (xpc10nz==19/*19:xpc10nz*/)
    xpc10nz = (20/*20:xpc10nz*/);
}

 void test32::exe1410()
 { 
  //  Method no 14 mname=test32
    if (xpc10nz==18/*18:xpc10nz*/)
    xpc10nz = (18/*18:xpc10nz*/);
}

 void test32::exe1510()
 { 
  //  Method no 15 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==17/*17:xpc10nz*/)
    xpc10nz = (19/*19:xpc10nz*/);
}

 void test32::exe1610()
 { 
  //  Method no 16 mname=test32
    if (1000<test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==17/*17:xpc10nz*/)
    xpc10nz = (18/*18:xpc10nz*/);
}

 void test32::exe1710()
 { 
  //  Method no 17 mname=test32
    if (xpc10nz==16/*16:xpc10nz*/)
    xpc10nz = (17/*17:xpc10nz*/);
}

 void test32::exe1810()
 { 
  //  Method no 18 mname=test32
    if ((xpc10nz==15/*15:xpc10nz*/&&isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER14_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER14RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER12_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER10_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER12_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy&&isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER14_rdy&&isDIVIDER18_rdy))
    if ((isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER14_rdy&&isDIVIDER18_rdy)||(isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER18_rdy)||(isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18_rdy)||(isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER12_rdy&&isDIVIDER18_rdy)||(isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER12RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER10_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER12_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER14RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER16_rdy&&isDIVIDER18_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER14_rdy)||(isDIVIDER12RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy)||(isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld)||(isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy)||(isDIVIDER14RRh10vld&&isDIVIDER16RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(isDIVIDER12RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER14_rdy&&isDIVIDER16_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER16_rdy)||(isDIVIDER12RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER16_rdy)||(isDIVIDER10RRh10vld&&isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER12_rdy&&isDIVIDER16_rdy)||(isDIVIDER14RRh10vld&&isDIVIDER18RRh10vld&&isDIVIDER10_rdy&&isDIVIDER12_rdy&&isDIVIDER16_rdy))
    xpc10nz = (32/*32:xpc10nz*/);
}

 void test32::exe1910()
 { 
  //  Method no 19 mname=test32
    if (xpc10nz==14/*14:xpc10nz*/)
    xpc10nz = (15/*15:xpc10nz*/);
}

 void test32::exe2010()
 { 
  //  Method no 20 mname=test32
    if (xpc10nz==13/*13:xpc10nz*/)
    xpc10nz = (14/*14:xpc10nz*/);
}

 void test32::exe2110()
 { 
  //  Method no 21 mname=test32
    if (xpc10nz==12/*12:xpc10nz*/)
    xpc10nz = (13/*13:xpc10nz*/);
}

 void test32::exe2210()
 { 
  //  Method no 22 mname=test32
    if (xpc10nz==11/*11:xpc10nz*/)
    xpc10nz = (12/*12:xpc10nz*/);
}

 void test32::exe2310()
 { 
  //  Method no 23 mname=test32
    if (xpc10nz==10/*10:xpc10nz*/)
    xpc10nz = (11/*11:xpc10nz*/);
}

 void test32::exe2410()
 { 
  //  Method no 24 mname=test32
    if (xpc10nz==9/*9:xpc10nz*/)
    xpc10nz = (10/*10:xpc10nz*/);
}

 void test32::exe2510()
 { 
  //  Method no 25 mname=test32
    if (xpc10nz==8/*8:xpc10nz*/)
    xpc10nz = (9/*9:xpc10nz*/);
}

 void test32::exe2610()
 { 
  //  Method no 26 mname=test32
    if (xpc10nz==7/*7:xpc10nz*/)
    xpc10nz = (8/*8:xpc10nz*/);
}

 void test32::exe2710()
 { 
  //  Method no 27 mname=test32
    if (xpc10nz==6/*6:xpc10nz*/)
    xpc10nz = (7/*7:xpc10nz*/);
}

 void test32::exe2810()
 { 
  //  Method no 28 mname=test32
    if (xpc10nz==5/*5:xpc10nz*/)
    xpc10nz = (6/*6:xpc10nz*/);
}

 void test32::exe2910()
 { 
  //  Method no 29 mname=test32
    if (xpc10nz==4/*4:xpc10nz*/)
    xpc10nz = (5/*5:xpc10nz*/);
}

 void test32::exe3010()
 { 
  //  Method no 30 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/)
    xpc10nz = (4/*4:xpc10nz*/);
}

 void test32::exe3110()
 { 
  //  Method no 31 mname=test32
    if (1000<test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/)
    xpc10nz = (16/*16:xpc10nz*/);
}

 void test32::exe3210()
 { 
  //  Method no 32 mname=test32
    if (xpc10nz==2/*2:xpc10nz*/)
    xpc10nz = (3/*3:xpc10nz*/);
}

 void test32::exe3310()
 { 
  //  Method no 33 mname=test32
    if (xpc10nz==1/*1:xpc10nz*/)
    xpc10nz = (2/*2:xpc10nz*/);
}

 void test32::exe3410()
 { 
  //  Method no 34 mname=test32
    if (xpc10nz==0/*0:xpc10nz*/)
    xpc10nz = (1/*1:xpc10nz*/);
}

 void test32::exe3510()
 { 
  //  Method no 35 mname=test32
    xpc10_clear = (xpc10nz==19/*19:xpc10nz*/||xpc10nz==32/*32:xpc10nz*/||xpc10nz==18/*18:xpc10nz*/||xpc10nz==17/*17:xpc10nz*/||xpc10nz==16/*16:xpc10nz*/||xpc10nz==3/*3:xpc10nz*/||xpc10nz==2/*2:xpc10nz*/||xpc10nz==1/*1:xpc10nz*/||xpc10nz==0/*0:xpc10nz*/);
}

 void test32::exe3610()
 { 
  //  Method no 36 mname=test32
    if (xpc10nz==0/*0:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("%s%i", "Test32 Limit=", 1000);
}

 void test32::exe3710()
 { 
  //  Method no 37 mname=test32
    if (xpc10nz==1/*1:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("Negative division results: 21/-4=%u  -21/4=%u", -5, -5);
}

 void test32::exe3810()
 { 
  //  Method no 38 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==15/*15:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("%i%s%u", test32_T403_Main_T403_Main_V_1_GP, " +4 gives -> ", ((isDIVIDER18RRh10vld)?isDIVIDER18RRh10hold:isDIVIDER18_RR));
}

 void test32::exe3910()
 { 
  //  Method no 39 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==15/*15:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("%i%s%u", test32_T403_Main_T403_Main_V_1_GP, " +3 gives -> ", ((isDIVIDER16RRh10vld)?isDIVIDER16RRh10hold:isDIVIDER16_RR));
}

 void test32::exe4010()
 { 
  //  Method no 40 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==15/*15:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("%i%s%u", test32_T403_Main_T403_Main_V_1_GP, " +2 gives -> ", ((isDIVIDER14RRh10vld)?isDIVIDER14RRh10hold:isDIVIDER14_RR));
}

 void test32::exe4110()
 { 
  //  Method no 41 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==15/*15:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("%i%s%u", test32_T403_Main_T403_Main_V_1_GP, " +1 gives -> ", ((isDIVIDER12RRh10vld)?isDIVIDER12RRh10hold:isDIVIDER12_RR));
}

 void test32::exe4210()
 { 
  //  Method no 42 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==15/*15:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("%i%s%u", test32_T403_Main_T403_Main_V_1_GP, " +0 gives -> ", ((isDIVIDER10RRh10vld)?isDIVIDER10RRh10hold:isDIVIDER10_RR));
}

 void test32::exe4310()
 { 
  //  Method no 43 mname=test32
    if (1000<test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("Test32 middle.");
}

 void test32::exe4410()
 { 
  //  Method no 44 mname=test32
    if (1000<test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==17/*17:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("Test32 finished.");
}

 void test32::exe4510()
 { 
  //  Method no 45 mname=test32
    if (xpc10nz==18/*18:xpc10nz*/&&!xpc10_stall)
     hpr_sysexit(0);
}

 void test32::exe4610()
 { 
  //  Method no 46 mname=test32
    if (xpc10nz==31/*31:xpc10nz*/&&!xpc10_stall)
     hpr_writeln("%i%s%u", test32_T403_Main_T403_Main_V_1_GP, " again -> ", ((isDIVIDER18RRh10vld)?isDIVIDER18RRh10hold:isDIVIDER18_RR));
}

 void test32::exe4710()
 { 
  //  Method no 47 mname=test32
    if (!xpc10_stall)
    isDIVIDER10_req = (((1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/)?1:0));
}

 void test32::exe4810()
 { 
  //  Method no 48 mname=test32
    if (!xpc10_stall)
    isDIVIDER12_req = (((1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/)?1:0));
}

 void test32::exe4910()
 { 
  //  Method no 49 mname=test32
    if (!xpc10_stall)
    isDIVIDER14_req = (((1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/)?1:0));
}

 void test32::exe5010()
 { 
  //  Method no 50 mname=test32
    if (!xpc10_stall)
    isDIVIDER16_req = (((1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/)?1:0));
}

 void test32::exe5110()
 { 
  //  Method no 51 mname=test32
    if (!xpc10_stall)
    isDIVIDER18_req = (((xpc10nz==19/*19:xpc10nz*/||(1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/))?1:0));
}

 void test32::exe5210()
 { 
  //  Method no 52 mname=test32
    if (isDIVIDER18_rdy&&isDIVIDER18RRh10primed)
    isDIVIDER18RRh10hold = (isDIVIDER18_RR);
}

 void test32::exe5310()
 { 
  //  Method no 53 mname=test32
    if (!xpc10_stall&&xpc10_clear)
    isDIVIDER18RRh10vld = (0);
}

 void test32::exe5410()
 { 
  //  Method no 54 mname=test32
    if (isDIVIDER18_rdy&&isDIVIDER18RRh10primed)
    isDIVIDER18RRh10vld = (1);
}

 void test32::exe5510()
 { 
  //  Method no 55 mname=test32
    if (isDIVIDER18_rdy&&isDIVIDER18RRh10primed)
    isDIVIDER18RRh10primed = (0);
}

 void test32::exe5610()
 { 
  //  Method no 56 mname=test32
    if (isDIVIDER16_rdy&&isDIVIDER16RRh10primed)
    isDIVIDER16RRh10hold = (isDIVIDER16_RR);
}

 void test32::exe5710()
 { 
  //  Method no 57 mname=test32
    if (!xpc10_stall&&xpc10_clear)
    isDIVIDER16RRh10vld = (0);
}

 void test32::exe5810()
 { 
  //  Method no 58 mname=test32
    if (isDIVIDER16_rdy&&isDIVIDER16RRh10primed)
    isDIVIDER16RRh10vld = (1);
}

 void test32::exe5910()
 { 
  //  Method no 59 mname=test32
    if (isDIVIDER16_rdy&&isDIVIDER16RRh10primed)
    isDIVIDER16RRh10primed = (0);
}

 void test32::exe6010()
 { 
  //  Method no 60 mname=test32
    if (isDIVIDER14_rdy&&isDIVIDER14RRh10primed)
    isDIVIDER14RRh10hold = (isDIVIDER14_RR);
}

 void test32::exe6110()
 { 
  //  Method no 61 mname=test32
    if (!xpc10_stall&&xpc10_clear)
    isDIVIDER14RRh10vld = (0);
}

 void test32::exe6210()
 { 
  //  Method no 62 mname=test32
    if (isDIVIDER14_rdy&&isDIVIDER14RRh10primed)
    isDIVIDER14RRh10vld = (1);
}

 void test32::exe6310()
 { 
  //  Method no 63 mname=test32
    if (isDIVIDER14_rdy&&isDIVIDER14RRh10primed)
    isDIVIDER14RRh10primed = (0);
}

 void test32::exe6410()
 { 
  //  Method no 64 mname=test32
    if (isDIVIDER12_rdy&&isDIVIDER12RRh10primed)
    isDIVIDER12RRh10hold = (isDIVIDER12_RR);
}

 void test32::exe6510()
 { 
  //  Method no 65 mname=test32
    if (!xpc10_stall&&xpc10_clear)
    isDIVIDER12RRh10vld = (0);
}

 void test32::exe6610()
 { 
  //  Method no 66 mname=test32
    if (isDIVIDER12_rdy&&isDIVIDER12RRh10primed)
    isDIVIDER12RRh10vld = (1);
}

 void test32::exe6710()
 { 
  //  Method no 67 mname=test32
    if (isDIVIDER12_rdy&&isDIVIDER12RRh10primed)
    isDIVIDER12RRh10primed = (0);
}

 void test32::exe6810()
 { 
  //  Method no 68 mname=test32
    if (isDIVIDER10_rdy&&isDIVIDER10RRh10primed)
    isDIVIDER10RRh10hold = (isDIVIDER10_RR);
}

 void test32::exe6910()
 { 
  //  Method no 69 mname=test32
    if (!xpc10_stall&&xpc10_clear)
    isDIVIDER10RRh10vld = (0);
}

 void test32::exe7010()
 { 
  //  Method no 70 mname=test32
    if (isDIVIDER10_rdy&&isDIVIDER10RRh10primed)
    isDIVIDER10RRh10vld = (1);
}

 void test32::exe7110()
 { 
  //  Method no 71 mname=test32
    if (isDIVIDER10_rdy&&isDIVIDER10RRh10primed)
    isDIVIDER10RRh10primed = (0);
}

 void test32::exe7210()
 { 
  //  Method no 72 mname=test32
    if (xpc10nz==0/*0:xpc10nz*/&&!xpc10_stall)
    test32_nn = (0x7fff);
}

 void test32::exe7310()
 { 
  //  Method no 73 mname=test32
    if (xpc10nz==1/*1:xpc10nz*/&&!xpc10_stall)
    test32_nn = (0x8000);
}

 void test32::exe7410()
 { 
  //  Method no 74 mname=test32
    if (xpc10nz==2/*2:xpc10nz*/&&!xpc10_stall)
    test32_T403_Main_T403_Main_V_1_GP = (1);
}

 void test32::exe7510()
 { 
  //  Method no 75 mname=test32
    if (xpc10nz==3/*3:xpc10nz*/)
    isDIVIDER10RRh10primed = (!xpc10_stall);
}

 void test32::exe7610()
 { 
  //  Method no 76 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER10_DD = ((int)(test32_T403_Main_T403_Main_V_1_GP));
}

 void test32::exe7710()
 { 
  //  Method no 77 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER10_NN = (test32_nn);
}

 void test32::exe7810()
 { 
  //  Method no 78 mname=test32
    if (xpc10nz==3/*3:xpc10nz*/)
    isDIVIDER12RRh10primed = (!xpc10_stall);
}

 void test32::exe7910()
 { 
  //  Method no 79 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER12_DD = ((int)(test32_T403_Main_T403_Main_V_1_GP));
}

 void test32::exe8010()
 { 
  //  Method no 80 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER12_NN = (1+test32_nn);
}

 void test32::exe8110()
 { 
  //  Method no 81 mname=test32
    if (xpc10nz==3/*3:xpc10nz*/)
    isDIVIDER14RRh10primed = (!xpc10_stall);
}

 void test32::exe8210()
 { 
  //  Method no 82 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER14_DD = ((int)(test32_T403_Main_T403_Main_V_1_GP));
}

 void test32::exe8310()
 { 
  //  Method no 83 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER14_NN = (2+test32_nn);
}

 void test32::exe8410()
 { 
  //  Method no 84 mname=test32
    if (xpc10nz==3/*3:xpc10nz*/)
    isDIVIDER16RRh10primed = (!xpc10_stall);
}

 void test32::exe8510()
 { 
  //  Method no 85 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER16_DD = ((int)(test32_T403_Main_T403_Main_V_1_GP));
}

 void test32::exe8610()
 { 
  //  Method no 86 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER16_NN = (3+test32_nn);
}

 void test32::exe8710()
 { 
  //  Method no 87 mname=test32
    if (xpc10nz==3/*3:xpc10nz*/)
    isDIVIDER18RRh10primed = (!xpc10_stall);
}

 void test32::exe8810()
 { 
  //  Method no 88 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER18_DD = ((int)(test32_T403_Main_T403_Main_V_1_GP));
}

 void test32::exe8910()
 { 
  //  Method no 89 mname=test32
    if (1000>=test32_T403_Main_T403_Main_V_1_GP&&xpc10nz==3/*3:xpc10nz*/&&!xpc10_stall)
    isDIVIDER18_NN = (4+test32_nn);
}

 void test32::exe9010()
 { 
  //  Method no 90 mname=test32
    if (xpc10nz==16/*16:xpc10nz*/&&!xpc10_stall)
    test32_T403_Main_T403_Main_V_1_GP = (1);
}

 void test32::exe9110()
 { 
  //  Method no 91 mname=test32
    if (xpc10nz==19/*19:xpc10nz*/)
    isDIVIDER18RRh10primed = (!xpc10_stall);
}

 void test32::exe9210()
 { 
  //  Method no 92 mname=test32
    if (xpc10nz==19/*19:xpc10nz*/&&!xpc10_stall)
    isDIVIDER18_DD = ((int)(test32_T403_Main_T403_Main_V_1_GP));
}

 void test32::exe9310()
 { 
  //  Method no 93 mname=test32
    if (xpc10nz==19/*19:xpc10nz*/&&!xpc10_stall)
    isDIVIDER18_NN = (test32_nn);
}

 void test32::exe9410()
 { 
  //  Method no 94 mname=test32
    if (xpc10nz==31/*31:xpc10nz*/&&!xpc10_stall)
    test32_T403_Main_T403_Main_V_1_GP = (3*test32_T403_Main_T403_Main_V_1_GP);
}

 void test32::exe9510()
 { 
  //  Method no 95 mname=test32
    if (xpc10nz==32/*32:xpc10nz*/&&!xpc10_stall)
    test32_T403_Main_T403_Main_V_1_GP = (3*test32_T403_Main_T403_Main_V_1_GP);
}

 void test32::exe9610()
 { 
  //  Method no 96 mname=test32
    xpc10_stall = ((xpc10nz==31/*31:xpc10nz*/&&!isDIVIDER18RRh10vld&&!isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&!isDIVIDER18RRh10vld&&!isDIVIDER18_rdy)||(xpc10nz==15/*15:xpc10nz*/&&!isDIVIDER16RRh10vld&&!isDIVIDER16_rdy)||(xpc10nz==15/*15:xpc10nz*/&&!isDIVIDER14RRh10vld&&!isDIVIDER14_rdy)||(xpc10nz==15/*15:xpc10nz*/&&!isDIVIDER12RRh10vld&&!isDIVIDER12_rdy)||(xpc10nz==15/*15:xpc10nz*/&&!isDIVIDER10RRh10vld&&!isDIVIDER10_rdy));
}

 void test32::exe018()
 { 
  //  Method no 0 mname=isDIVIDER18.CV_INT_VL_DIVIDER_S
    isDIVIDER18_rdy = (isDIVIDER18_req);
}

 void test32::exe118()
 { 
  //  Method no 1 mname=isDIVIDER18.CV_INT_VL_DIVIDER_S
    isDIVIDER18_RR = (isDIVIDER18_NN/isDIVIDER18_DD);
}

 void test32::exe016()
 { 
  //  Method no 0 mname=isDIVIDER16.CV_INT_VL_DIVIDER_S
    isDIVIDER16_rdy = (isDIVIDER16_req);
}

 void test32::exe116()
 { 
  //  Method no 1 mname=isDIVIDER16.CV_INT_VL_DIVIDER_S
    isDIVIDER16_RR = (isDIVIDER16_NN/isDIVIDER16_DD);
}

 void test32::exe014()
 { 
  //  Method no 0 mname=isDIVIDER14.CV_INT_VL_DIVIDER_S
    isDIVIDER14_rdy = (isDIVIDER14_req);
}

 void test32::exe114()
 { 
  //  Method no 1 mname=isDIVIDER14.CV_INT_VL_DIVIDER_S
    isDIVIDER14_RR = (isDIVIDER14_NN/isDIVIDER14_DD);
}

 void test32::exe012()
 { 
  //  Method no 0 mname=isDIVIDER12.CV_INT_VL_DIVIDER_S
    isDIVIDER12_rdy = (isDIVIDER12_req);
}

 void test32::exe112()
 { 
  //  Method no 1 mname=isDIVIDER12.CV_INT_VL_DIVIDER_S
    isDIVIDER12_RR = (isDIVIDER12_NN/isDIVIDER12_DD);
}

 void test32::exe010()
 { 
  //  Method no 0 mname=isDIVIDER10.CV_INT_VL_DIVIDER_S
    isDIVIDER10_rdy = (isDIVIDER10_req);
}

 void test32::exe110()
 { 
  //  Method no 1 mname=isDIVIDER10.CV_INT_VL_DIVIDER_S
    isDIVIDER10_RR = (isDIVIDER10_NN/isDIVIDER10_DD);
}
// eof test32
