// test9
// Generated by CBG HPR L/S stagename=cgen2
//Kiwi Scientific Acceleration (KiwiC .net/CIL/C# to Verilog/SystemC compiler): Version alpha 0.2.18b : 5th-December-2016 Linux/X86_64:koo// 08/12/2016 06:50:19
//  /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/kiwic.exe -vnl-roundtrip=disable -report-each-step -kiwic-finish=enable -kiwic-register-colours=1 -repack-to-roms=disable test9.exe -vnl DUT.v -sim 1800 -vnl-resets=synchronous -res2-loadstore-port-count=0 -kiwic-cil-dump=combined -give-backtrace -report-each-step

#include "test9.h"

// opath operation: 10: cgen2

 void test9::exe010()
 { 
  //  Method no 0 mname=test9
    if (xpc10nz==6/*6:xpc10nz*/)
    xpc10nz = (1/*1:xpc10nz*/);
}

 void test9::exe110()
 { 
  //  Method no 1 mname=test9
    if (xpc10nz==5/*5:xpc10nz*/)
    xpc10nz = (3/*3:xpc10nz*/);
}

 void test9::exe210()
 { 
  //  Method no 2 mname=test9
    if (xpc10nz==4/*4:xpc10nz*/)
    xpc10nz = (1/*1:xpc10nz*/);
}

 void test9::exe310()
 { 
  //  Method no 3 mname=test9
    if (!ack&&xpc10nz==3/*3:xpc10nz*/)
    xpc10nz = (5/*5:xpc10nz*/);
}

 void test9::exe410()
 { 
  //  Method no 4 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0<0xc&&xpc10nz==3/*3:xpc10nz*/)
    xpc10nz = (4/*4:xpc10nz*/);
}

 void test9::exe510()
 { 
  //  Method no 5 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0>=0xc&&xpc10nz==3/*3:xpc10nz*/)
    xpc10nz = (3/*3:xpc10nz*/);
}

 void test9::exe610()
 { 
  //  Method no 6 mname=test9
    if (xpc10nz==2/*2:xpc10nz*/)
    xpc10nz = (3/*3:xpc10nz*/);
}

 void test9::exe710()
 { 
  //  Method no 7 mname=test9
    if (ack&&xpc10nz==1/*1:xpc10nz*/)
    xpc10nz = (6/*6:xpc10nz*/);
}

 void test9::exe810()
 { 
  //  Method no 8 mname=test9
    if (!ack&&xpc10nz==1/*1:xpc10nz*/)
    xpc10nz = (2/*2:xpc10nz*/);
}

 void test9::exe910()
 { 
  //  Method no 9 mname=test9
    if (xpc10nz==0/*0:xpc10nz*/)
    xpc10nz = (1/*1:xpc10nz*/);
}

 void test9::exe1010()
 { 
  //  Method no 10 mname=test9
    if (!ack&&xpc10nz==1/*1:xpc10nz*/)
     hpr_write(" 0x%H ", hpr_toChar((unsigned short)((unsigned char)("Hello World\n"[T403_test9_parallel_print_0_3_V_0]))));
}

 void test9::exe1110()
 { 
  //  Method no 11 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0>=0xc&&xpc10nz==3/*3:xpc10nz*/)
     hpr_sysexit(0);
}

 void test9::exe1210()
 { 
  //  Method no 12 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0>=0xc&&xpc10nz==3/*3:xpc10nz*/)
     hpr_writeln("\nDone");
}

 void test9::exe1310()
 { 
  //  Method no 13 mname=test9
    if (xpc10nz==0/*0:xpc10nz*/)
    T403_test9_parallel_print_0_3_V_0 = (0);
}

 void test9::exe1410()
 { 
  //  Method no 14 mname=test9
    if (!ack&&xpc10nz==1/*1:xpc10nz*/)
    strobe = (0x1);
}

 void test9::exe1510()
 { 
  //  Method no 15 mname=test9
    if (!ack&&xpc10nz==1/*1:xpc10nz*/)
    parallel_port_dout = ((unsigned char)("Hello World\n"[T403_test9_parallel_print_0_3_V_0]));
}

 void test9::exe1610()
 { 
  //  Method no 16 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0<0xc&&xpc10nz==3/*3:xpc10nz*/)
    T403_test9_parallel_print_0_3_V_0 = (1+T403_test9_parallel_print_0_3_V_0);
}

 void test9::exe1710()
 { 
  //  Method no 17 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0<0xc&&xpc10nz==3/*3:xpc10nz*/)
    strobe = (0x0);
}

 void test9::exe1810()
 { 
  //  Method no 18 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0>=0xc&&xpc10nz==3/*3:xpc10nz*/)
    T403_test9_parallel_print_0_3_V_0 = (1+T403_test9_parallel_print_0_3_V_0);
}

 void test9::exe1910()
 { 
  //  Method no 19 mname=test9
    if (ack&&1+T403_test9_parallel_print_0_3_V_0>=0xc&&xpc10nz==3/*3:xpc10nz*/)
    strobe = (0x0);
}
// eof test9
