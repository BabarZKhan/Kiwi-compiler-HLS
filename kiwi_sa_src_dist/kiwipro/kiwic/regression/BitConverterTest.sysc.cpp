// BitConverterTest
// Generated by CBG HPR L/S stagename=cgen2
//Kiwi Scientific Acceleration (KiwiC .net/CIL/C# to Verilog/SystemC compiler): Version alpha 0.2.17b : 1st-December-2016 Linux/X86_64:koo// 04/12/2016 21:48:36
//  /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/kiwic.exe -vnl-roundtrip=disable -report-each-step -kiwic-finish=enable -kiwic-register-colours=1 -repack-to-roms=disable test45.exe -cil-uwind-budget=400 -kiwic-kcode-dump=enable -res2-regfile-threshold=8 -kiwic-autodispose=enable -sim 1800 -vnl-resets=synchronous -vnl test45.v -res2-loadstore-port-count=0 -bevelab-default-pause-mode=soft -vnl-rootmodname=DUT -give-backtrace -report-each-step

#include "BitConverterTest.h"

// opath operation: 10: cgen2

 void BitConverterTest::exe016()
 { 
  //  Method no 0 mname=BitConverterTest
    if (xpc10nz==22/*22:xpc10nz*/)
    xpc10nz = (20/*20:xpc10nz*/);
}

 void BitConverterTest::exe116()
 { 
  //  Method no 1 mname=BitConverterTest
    if (xpc10nz==21/*21:xpc10nz*/)
    xpc10nz = (20/*20:xpc10nz*/);
}

 void BitConverterTest::exe216()
 { 
  //  Method no 2 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<3&&xpc10nz==20/*20:xpc10nz*/)
    xpc10nz = (16/*16:xpc10nz*/);
}

 void BitConverterTest::exe310()
 { 
  //  Method no 3 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=3&&xpc10nz==20/*20:xpc10nz*/)
    xpc10nz = (20/*20:xpc10nz*/);
}

 void BitConverterTest::exe410()
 { 
  //  Method no 4 mname=BitConverterTest
    if (xpc10nz==19/*19:xpc10nz*/)
    xpc10nz = (20/*20:xpc10nz*/);
}

 void BitConverterTest::exe510()
 { 
  //  Method no 5 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    xpc10nz = (22/*22:xpc10nz*/);
}

 void BitConverterTest::exe610()
 { 
  //  Method no 6 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    xpc10nz = (21/*21:xpc10nz*/);
}

 void BitConverterTest::exe710()
 { 
  //  Method no 7 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    xpc10nz = (19/*19:xpc10nz*/);
}

 void BitConverterTest::exe810()
 { 
  //  Method no 8 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==18/*18:xpc10nz*/)
    xpc10nz = (18/*18:xpc10nz*/);
}

 void BitConverterTest::exe910()
 { 
  //  Method no 9 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    xpc10nz = (18/*18:xpc10nz*/);
}

 void BitConverterTest::exe1010()
 { 
  //  Method no 10 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    xpc10nz = (18/*18:xpc10nz*/);
}

 void BitConverterTest::exe1110()
 { 
  //  Method no 11 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    xpc10nz = (18/*18:xpc10nz*/);
}

 void BitConverterTest::exe1210()
 { 
  //  Method no 12 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==17/*17:xpc10nz*/)
    xpc10nz = (17/*17:xpc10nz*/);
}

 void BitConverterTest::exe1310()
 { 
  //  Method no 13 mname=BitConverterTest
    if (xpc10nz==16/*16:xpc10nz*/)
    xpc10nz = (17/*17:xpc10nz*/);
}

 void BitConverterTest::exe1410()
 { 
  //  Method no 14 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<2&&xpc10nz==15/*15:xpc10nz*/)
    xpc10nz = (14/*14:xpc10nz*/);
}

 void BitConverterTest::exe1510()
 { 
  //  Method no 15 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=2&&xpc10nz==15/*15:xpc10nz*/)
    xpc10nz = (16/*16:xpc10nz*/);
}

 void BitConverterTest::exe1610()
 { 
  //  Method no 16 mname=BitConverterTest
    if (xpc10nz==14/*14:xpc10nz*/)
    xpc10nz = (15/*15:xpc10nz*/);
}

 void BitConverterTest::exe1710()
 { 
  //  Method no 17 mname=BitConverterTest
    if (xpc10nz==13/*13:xpc10nz*/)
    xpc10nz = (14/*14:xpc10nz*/);
}

 void BitConverterTest::exe1810()
 { 
  //  Method no 18 mname=BitConverterTest
    if (xpc10nz==12/*12:xpc10nz*/)
    xpc10nz = (13/*13:xpc10nz*/);
}

 void BitConverterTest::exe1910()
 { 
  //  Method no 19 mname=BitConverterTest
    if (xpc10nz==11/*11:xpc10nz*/)
    xpc10nz = (12/*12:xpc10nz*/);
}

 void BitConverterTest::exe2010()
 { 
  //  Method no 20 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==7/*7:xpc10nz*/)
    xpc10nz = (11/*11:xpc10nz*/);
}

 void BitConverterTest::exe2110()
 { 
  //  Method no 21 mname=BitConverterTest
    if (xpc10nz==10/*10:xpc10nz*/)
    xpc10nz = (7/*7:xpc10nz*/);
}

 void BitConverterTest::exe2210()
 { 
  //  Method no 22 mname=BitConverterTest
    if (xpc10nz==9/*9:xpc10nz*/)
    xpc10nz = (10/*10:xpc10nz*/);
}

 void BitConverterTest::exe2310()
 { 
  //  Method no 23 mname=BitConverterTest
    if (xpc10nz==8/*8:xpc10nz*/)
    xpc10nz = (9/*9:xpc10nz*/);
}

 void BitConverterTest::exe2410()
 { 
  //  Method no 24 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<1&&xpc10nz==7/*7:xpc10nz*/)
    xpc10nz = (8/*8:xpc10nz*/);
}

 void BitConverterTest::exe2510()
 { 
  //  Method no 25 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
    xpc10nz = (7/*7:xpc10nz*/);
}

 void BitConverterTest::exe2610()
 { 
  //  Method no 26 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=0x4&&xpc10nz==2/*2:xpc10nz*/)
    xpc10nz = (6/*6:xpc10nz*/);
}

 void BitConverterTest::exe2710()
 { 
  //  Method no 27 mname=BitConverterTest
    if (xpc10nz==5/*5:xpc10nz*/)
    xpc10nz = (2/*2:xpc10nz*/);
}

 void BitConverterTest::exe2810()
 { 
  //  Method no 28 mname=BitConverterTest
    if (xpc10nz==4/*4:xpc10nz*/)
    xpc10nz = (5/*5:xpc10nz*/);
}

 void BitConverterTest::exe2910()
 { 
  //  Method no 29 mname=BitConverterTest
    if (xpc10nz==3/*3:xpc10nz*/)
    xpc10nz = (4/*4:xpc10nz*/);
}

 void BitConverterTest::exe3010()
 { 
  //  Method no 30 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP<0x4&&xpc10nz==2/*2:xpc10nz*/)
    xpc10nz = (3/*3:xpc10nz*/);
}

 void BitConverterTest::exe3110()
 { 
  //  Method no 31 mname=BitConverterTest
    if (xpc10nz==1/*1:xpc10nz*/)
    xpc10nz = (2/*2:xpc10nz*/);
}

 void BitConverterTest::exe3210()
 { 
  //  Method no 32 mname=BitConverterTest
    if (xpc10nz==0/*0:xpc10nz*/)
    xpc10nz = (1/*1:xpc10nz*/);
}

 void BitConverterTest::exe3310()
 { 
  //  Method no 33 mname=BitConverterTest
    if (xpc10nz==0/*0:xpc10nz*/)
     hpr_writeln("Hello from Test45");
}

 void BitConverterTest::exe3410()
 { 
  //  Method no 34 mname=BitConverterTest
    if (xpc10nz==1/*1:xpc10nz*/)
    __FPD_CC_SCALbx12_ARA0[0] = (/*ub CVFPMULTIPLIER140_PR10, CVFPMULTIPLIER141_PR12, clk, reset, CVFPMULTIPLIER14_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_fail, CVFPMULTIPLIER120_PR14, CVFPMULTIPLIER121_PR16, clk, reset, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_fail, CVFPMULTIPLIER100_PR18, CVFPMULTIPLIER101_PR20, clk, reset, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_fail, T403/BitConverterTest/FloatConvTest1/0.9/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_1_GP, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_0, T403/System/BitConverter/ToInt32/6.2/V_0, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_8, @_FPD/CC/SCALbx12_ARA0, @8_US/CC/SCALbx10_ARA0, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_FPRR, xpc10nz, CVFPMULTIPLIER10RRh10hold, CVFPMULTIPLIER10RRh10shot0, CVFPMULTIPLIER10RRh10shot1, CVFPMULTIPLIER10RRh10shot2, CVFPMULTIPLIER14RRh10hold, CVFPMULTIPLIER14RRh10shot0, CVFPMULTIPLIER14RRh10shot1, CVFPMULTIPLIER14RRh10shot2, CVFPMULTIPLIER12RRh10hold, CVFPMULTIPLIER12RRh10shot0, CVFPMULTIPLIER12RRh10shot1, CVFPMULTIPLIER12RRh10shot2, clk cf 12345.6789*/12345_6789);
}

 void BitConverterTest::exe3510()
 { 
  //  Method no 35 mname=BitConverterTest
    if (xpc10nz==1/*1:xpc10nz*/)
     hpr_KppMark("FloatConvert0");
}

 void BitConverterTest::exe3610()
 { 
  //  Method no 36 mname=BitConverterTest
    if (xpc10nz==1/*1:xpc10nz*/)
     hpr_KppMark("HeadMark");
}

 void BitConverterTest::exe3710()
 { 
  //  Method no 37 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP<0x4&&xpc10nz==5/*5:xpc10nz*/)
    __FPD_CC_SCALbx12_ARA0[1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP] = ((long int)(T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP));
}

 void BitConverterTest::exe3810()
 { 
  //  Method no 38 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
     hpr_KppMark("FloatConvert1");
}

 void BitConverterTest::exe3910()
 { 
  //  Method no 39 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
     hpr_writeln("FloatConvTest0: %u  has %F  ", 3, _bitstoreal(__FPD_CC_SCALbx12_ARA0[3]));
}

 void BitConverterTest::exe4010()
 { 
  //  Method no 40 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
     hpr_writeln("FloatConvTest0: %u  has %F  ", 2, _bitstoreal(__FPD_CC_SCALbx12_ARA0[2]));
}

 void BitConverterTest::exe4110()
 { 
  //  Method no 41 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
     hpr_writeln("FloatConvTest0: %u  has %F  ", 1, _bitstoreal(__FPD_CC_SCALbx12_ARA0[1]));
}

 void BitConverterTest::exe4210()
 { 
  //  Method no 42 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
     hpr_writeln("FloatConvTest0: %u  has %F  ", 0, _bitstoreal(__FPD_CC_SCALbx12_ARA0[0]));
}

 void BitConverterTest::exe4310()
 { 
  //  Method no 43 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==13/*13:xpc10nz*/)
     hpr_KppMark("FloatLoop");
}

 void BitConverterTest::exe4410()
 { 
  //  Method no 44 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==13/*13:xpc10nz*/)
     hpr_writeln("FloatConvTest1:%F  becomes %F", _bitstoreal(T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP), _bitstoreal(hpr_flt2dbl((int)(T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP))));
}

 void BitConverterTest::exe4510()
 { 
  //  Method no 45 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<1&&xpc10nz==10/*10:xpc10nz*/)
     hpr_writeln("FloatConvTest1:%F  becomes %F", _bitstoreal(T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP), _bitstoreal(hpr_flt2dbl((int)(T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP))));
}

 void BitConverterTest::exe4610()
 { 
  //  Method no 46 mname=BitConverterTest
    if (xpc10nz==14/*14:xpc10nz*/)
     hpr_KppMark("LoopTop");
}

 void BitConverterTest::exe4710()
 { 
  //  Method no 47 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<2&&xpc10nz==15/*15:xpc10nz*/)
     hpr_KppMark("LoopBot");
}

 void BitConverterTest::exe4810()
 { 
  //  Method no 48 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<2&&xpc10nz==15/*15:xpc10nz*/)
     hpr_writeln("  %u  %u", T403_BitConverterTest_BitConvTest_0_11_V_0_GP, T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe4910()
 { 
  //  Method no 49 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=2&&xpc10nz==15/*15:xpc10nz*/)
     hpr_KppMark("BitConvTest");
}

 void BitConverterTest::exe5010()
 { 
  //  Method no 50 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=2&&xpc10nz==15/*15:xpc10nz*/)
     hpr_writeln("IsLittleEndian=%d\n", 0x1);
}

 void BitConverterTest::exe5110()
 { 
  //  Method no 51 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=2&&xpc10nz==15/*15:xpc10nz*/)
     hpr_writeln("Bit Convertor Test");
}

 void BitConverterTest::exe5210()
 { 
  //  Method no 52 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=2&&xpc10nz==15/*15:xpc10nz*/)
     hpr_KppMark("LoopBot");
}

 void BitConverterTest::exe5310()
 { 
  //  Method no 53 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=2&&xpc10nz==15/*15:xpc10nz*/)
     hpr_writeln("  %u  %u", T403_BitConverterTest_BitConvTest_0_11_V_0_GP, T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe5410()
 { 
  //  Method no 54 mname=BitConverterTest
    if (xpc10nz==16/*16:xpc10nz*/)
    _8_US_CC_SCALbx10_ARA0[0] = ((unsigned char)(255&0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP));
}

 void BitConverterTest::exe5510()
 { 
  //  Method no 55 mname=BitConverterTest
    if (xpc10nz==16/*16:xpc10nz*/)
    _8_US_CC_SCALbx10_ARA0[0x1] = ((unsigned char)(255&0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP>>8));
}

 void BitConverterTest::exe5610()
 { 
  //  Method no 56 mname=BitConverterTest
    if (xpc10nz==16/*16:xpc10nz*/)
    _8_US_CC_SCALbx10_ARA0[0x2] = ((unsigned char)(255&0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP>>16));
}

 void BitConverterTest::exe5710()
 { 
  //  Method no 57 mname=BitConverterTest
    if (xpc10nz==16/*16:xpc10nz*/)
    _8_US_CC_SCALbx10_ARA0[0x3] = ((unsigned char)(255&0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP>>24));
}

 void BitConverterTest::exe5810()
 { 
  //  Method no 58 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[0]));
}

 void BitConverterTest::exe5910()
 { 
  //  Method no 59 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[1]));
}

 void BitConverterTest::exe6010()
 { 
  //  Method no 60 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[0]));
}

 void BitConverterTest::exe6110()
 { 
  //  Method no 61 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[3]));
}

 void BitConverterTest::exe6210()
 { 
  //  Method no 62 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[2]));
}

 void BitConverterTest::exe6310()
 { 
  //  Method no 63 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[1]));
}

 void BitConverterTest::exe6410()
 { 
  //  Method no 64 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[0]));
}

 void BitConverterTest::exe6510()
 { 
  //  Method no 65 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]));
}

 void BitConverterTest::exe6610()
 { 
  //  Method no 66 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]));
}

 void BitConverterTest::exe6710()
 { 
  //  Method no 67 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]));
}

 void BitConverterTest::exe6810()
 { 
  //  Method no 68 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==18/*18:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]));
}

 void BitConverterTest::exe6910()
 { 
  //  Method no 69 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==18/*18:xpc10nz*/)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]));
}

 void BitConverterTest::exe7010()
 { 
  //  Method no 70 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==18/*18:xpc10nz*/)
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4)
     hpr_writeln("   %h", (unsigned char)(_8_US_CC_SCALbx10_ARA0[1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]));
}

 void BitConverterTest::exe7110()
 { 
  //  Method no 71 mname=BitConverterTest
    if (xpc10nz==19/*19:xpc10nz*/)
     hpr_writeln("Sum after Int32 %u sum=%u reconverted=%u", 0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP, T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0, T403_BitConverterTest_RoundTripTest_Int32_1_10_V_8);
}

 void BitConverterTest::exe7210()
 { 
  //  Method no 72 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<3&&xpc10nz==20/*20:xpc10nz*/)
     hpr_writeln("Test45 iteration %u: checksum = %u", T403_BitConverterTest_BitConvTest_0_11_V_0_GP, T403_BitConverterTest_BitConvTest_0_11_V_1_GP);
}

 void BitConverterTest::exe7310()
 { 
  //  Method no 73 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=3&&xpc10nz==20/*20:xpc10nz*/)
     hpr_sysexit(0);
}

 void BitConverterTest::exe7410()
 { 
  //  Method no 74 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=3&&xpc10nz==20/*20:xpc10nz*/)
     hpr_writeln("Test45 finished.");
}

 void BitConverterTest::exe7510()
 { 
  //  Method no 75 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=3&&xpc10nz==20/*20:xpc10nz*/)
     hpr_writeln("Test45 iteration %u: checksum = %u", T403_BitConverterTest_BitConvTest_0_11_V_0_GP, T403_BitConverterTest_BitConvTest_0_11_V_1_GP);
}

 void BitConverterTest::exe7610()
 { 
  //  Method no 76 mname=BitConverterTest
    if (xpc10nz==21/*21:xpc10nz*/)
     hpr_writeln("Sum after Int32 %u sum=%u reconverted=%u", 0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP, T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0, (int)(T403_System_BitConverter_ToInt32_6_2_V_0));
}

 void BitConverterTest::exe7710()
 { 
  //  Method no 77 mname=BitConverterTest
    if (xpc10nz==22/*22:xpc10nz*/)
     hpr_writeln("Sum after Int32 %u sum=%u reconverted=%u", 0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP, T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0, (int)(((int)(T403_System_BitConverter_ToInt32_6_2_V_0+(_8_US_CC_SCALbx10_ARA0[0x2]<<16)))+(_8_US_CC_SCALbx10_ARA0[0x3]<<24)));
}

 void BitConverterTest::exe7810()
 { 
  //  Method no 78 mname=BitConverterTest
    CVFPMULTIPLIER10RRh10shot0 = (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP<0x4&&xpc10nz==2/*2:xpc10nz*/);
}

 void BitConverterTest::exe7910()
 { 
  //  Method no 79 mname=BitConverterTest
    CVFPMULTIPLIER14RRh10shot0 = (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==7/*7:xpc10nz*/);
}

 void BitConverterTest::exe8010()
 { 
  //  Method no 80 mname=BitConverterTest
    CVFPMULTIPLIER12RRh10shot0 = (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<1&&xpc10nz==7/*7:xpc10nz*/);
}

 void BitConverterTest::exe8110()
 { 
  //  Method no 81 mname=BitConverterTest
    CVFPMULTIPLIER12RRh10shot2 = (CVFPMULTIPLIER12RRh10shot1);
}

 void BitConverterTest::exe8210()
 { 
  //  Method no 82 mname=BitConverterTest
    CVFPMULTIPLIER12RRh10shot1 = (CVFPMULTIPLIER12RRh10shot0);
}

 void BitConverterTest::exe8310()
 { 
  //  Method no 83 mname=BitConverterTest
    if (CVFPMULTIPLIER12RRh10shot2)
    CVFPMULTIPLIER12RRh10hold = (CVFPMULTIPLIER12_FPRR);
}

 void BitConverterTest::exe8410()
 { 
  //  Method no 84 mname=BitConverterTest
    CVFPMULTIPLIER14RRh10shot2 = (CVFPMULTIPLIER14RRh10shot1);
}

 void BitConverterTest::exe8510()
 { 
  //  Method no 85 mname=BitConverterTest
    CVFPMULTIPLIER14RRh10shot1 = (CVFPMULTIPLIER14RRh10shot0);
}

 void BitConverterTest::exe8610()
 { 
  //  Method no 86 mname=BitConverterTest
    if (CVFPMULTIPLIER14RRh10shot2)
    CVFPMULTIPLIER14RRh10hold = (CVFPMULTIPLIER14_FPRR);
}

 void BitConverterTest::exe8710()
 { 
  //  Method no 87 mname=BitConverterTest
    CVFPMULTIPLIER10RRh10shot2 = (CVFPMULTIPLIER10RRh10shot1);
}

 void BitConverterTest::exe8810()
 { 
  //  Method no 88 mname=BitConverterTest
    CVFPMULTIPLIER10RRh10shot1 = (CVFPMULTIPLIER10RRh10shot0);
}

 void BitConverterTest::exe8910()
 { 
  //  Method no 89 mname=BitConverterTest
    if (CVFPMULTIPLIER10RRh10shot2)
    CVFPMULTIPLIER10RRh10hold = (CVFPMULTIPLIER10_FPRR);
}

 void BitConverterTest::exe9010()
 { 
  //  Method no 90 mname=BitConverterTest
    if (xpc10nz==1/*1:xpc10nz*/)
    T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP = (/*ub CVFPMULTIPLIER140_PR10, CVFPMULTIPLIER141_PR12, clk, reset, CVFPMULTIPLIER14_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_fail, CVFPMULTIPLIER120_PR14, CVFPMULTIPLIER121_PR16, clk, reset, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_fail, CVFPMULTIPLIER100_PR18, CVFPMULTIPLIER101_PR20, clk, reset, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_fail, T403/BitConverterTest/FloatConvTest1/0.9/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_1_GP, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_0, T403/System/BitConverter/ToInt32/6.2/V_0, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_8, @_FPD/CC/SCALbx12_ARA0, @8_US/CC/SCALbx10_ARA0, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_FPRR, xpc10nz, CVFPMULTIPLIER10RRh10hold, CVFPMULTIPLIER10RRh10shot0, CVFPMULTIPLIER10RRh10shot1, CVFPMULTIPLIER10RRh10shot2, CVFPMULTIPLIER14RRh10hold, CVFPMULTIPLIER14RRh10shot0, CVFPMULTIPLIER14RRh10shot1, CVFPMULTIPLIER14RRh10shot2, CVFPMULTIPLIER12RRh10hold, CVFPMULTIPLIER12RRh10shot0, CVFPMULTIPLIER12RRh10shot1, CVFPMULTIPLIER12RRh10shot2, clk cf 148148.1468*/148148_1468);
}

 void BitConverterTest::exe9110()
 { 
  //  Method no 91 mname=BitConverterTest
    if (xpc10nz==1/*1:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (0);
}

 void BitConverterTest::exe9210()
 { 
  //  Method no 92 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=0x4&&xpc10nz==2/*2:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe9310()
 { 
  //  Method no 93 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP<0x4&&xpc10nz==2/*2:xpc10nz*/)
    CVFPMULTIPLIER10_A1 = (T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP);
}

 void BitConverterTest::exe9410()
 { 
  //  Method no 94 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP<0x4&&xpc10nz==2/*2:xpc10nz*/)
    CVFPMULTIPLIER10_A0 = (/*ub CVFPMULTIPLIER140_PR10, CVFPMULTIPLIER141_PR12, clk, reset, CVFPMULTIPLIER14_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_fail, CVFPMULTIPLIER120_PR14, CVFPMULTIPLIER121_PR16, clk, reset, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_fail, CVFPMULTIPLIER100_PR18, CVFPMULTIPLIER101_PR20, clk, reset, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_fail, T403/BitConverterTest/FloatConvTest1/0.9/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_1_GP, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_0, T403/System/BitConverter/ToInt32/6.2/V_0, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_8, @_FPD/CC/SCALbx12_ARA0, @8_US/CC/SCALbx10_ARA0, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_FPRR, xpc10nz, CVFPMULTIPLIER10RRh10hold, CVFPMULTIPLIER10RRh10shot0, CVFPMULTIPLIER10RRh10shot1, CVFPMULTIPLIER10RRh10shot2, CVFPMULTIPLIER14RRh10hold, CVFPMULTIPLIER14RRh10shot0, CVFPMULTIPLIER14RRh10shot1, CVFPMULTIPLIER14RRh10shot2, CVFPMULTIPLIER12RRh10hold, CVFPMULTIPLIER12RRh10shot0, CVFPMULTIPLIER12RRh10shot1, CVFPMULTIPLIER12RRh10shot2, clk cf 12*/12);
}

 void BitConverterTest::exe9510()
 { 
  //  Method no 95 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP<0x4&&xpc10nz==5/*5:xpc10nz*/)
    T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP = (((xpc10nz==5/*5:xpc10nz*/)?CVFPMULTIPLIER10_FPRR:CVFPMULTIPLIER10RRh10hold));
}

 void BitConverterTest::exe9610()
 { 
  //  Method no 96 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP<0x4&&xpc10nz==5/*5:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe9710()
 { 
  //  Method no 97 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
    T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP = (/*ub CVFPMULTIPLIER140_PR10, CVFPMULTIPLIER141_PR12, clk, reset, CVFPMULTIPLIER14_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_fail, CVFPMULTIPLIER120_PR14, CVFPMULTIPLIER121_PR16, clk, reset, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_fail, CVFPMULTIPLIER100_PR18, CVFPMULTIPLIER101_PR20, clk, reset, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_fail, T403/BitConverterTest/FloatConvTest1/0.9/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_1_GP, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_0, T403/System/BitConverter/ToInt32/6.2/V_0, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_8, @_FPD/CC/SCALbx12_ARA0, @8_US/CC/SCALbx10_ARA0, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_FPRR, xpc10nz, CVFPMULTIPLIER10RRh10hold, CVFPMULTIPLIER10RRh10shot0, CVFPMULTIPLIER10RRh10shot1, CVFPMULTIPLIER10RRh10shot2, CVFPMULTIPLIER14RRh10hold, CVFPMULTIPLIER14RRh10shot0, CVFPMULTIPLIER14RRh10shot1, CVFPMULTIPLIER14RRh10shot2, CVFPMULTIPLIER12RRh10hold, CVFPMULTIPLIER12RRh10shot0, CVFPMULTIPLIER12RRh10shot1, CVFPMULTIPLIER12RRh10shot2, clk cf 1.2345E+30*/1_2345E_30);
}

 void BitConverterTest::exe9810()
 { 
  //  Method no 98 mname=BitConverterTest
    if (xpc10nz==6/*6:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (0);
}

 void BitConverterTest::exe9910()
 { 
  //  Method no 99 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==7/*7:xpc10nz*/)
    CVFPMULTIPLIER14_A1 = (T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP);
}

 void BitConverterTest::exe10010()
 { 
  //  Method no 100 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==7/*7:xpc10nz*/)
    CVFPMULTIPLIER14_A0 = (/*ub CVFPMULTIPLIER140_PR10, CVFPMULTIPLIER141_PR12, clk, reset, CVFPMULTIPLIER14_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_fail, CVFPMULTIPLIER120_PR14, CVFPMULTIPLIER121_PR16, clk, reset, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_fail, CVFPMULTIPLIER100_PR18, CVFPMULTIPLIER101_PR20, clk, reset, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_fail, T403/BitConverterTest/FloatConvTest1/0.9/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_1_GP, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_0, T403/System/BitConverter/ToInt32/6.2/V_0, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_8, @_FPD/CC/SCALbx12_ARA0, @8_US/CC/SCALbx10_ARA0, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_FPRR, xpc10nz, CVFPMULTIPLIER10RRh10hold, CVFPMULTIPLIER10RRh10shot0, CVFPMULTIPLIER10RRh10shot1, CVFPMULTIPLIER10RRh10shot2, CVFPMULTIPLIER14RRh10hold, CVFPMULTIPLIER14RRh10shot0, CVFPMULTIPLIER14RRh10shot1, CVFPMULTIPLIER14RRh10shot2, CVFPMULTIPLIER12RRh10hold, CVFPMULTIPLIER12RRh10shot0, CVFPMULTIPLIER12RRh10shot1, CVFPMULTIPLIER12RRh10shot2, clk cf 100*/100);
}

 void BitConverterTest::exe10110()
 { 
  //  Method no 101 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==13/*13:xpc10nz*/)
    T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP = (((xpc10nz==13/*13:xpc10nz*/)?CVFPMULTIPLIER14_FPRR:CVFPMULTIPLIER14RRh10hold));
}

 void BitConverterTest::exe10210()
 { 
  //  Method no 102 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=1&&xpc10nz==13/*13:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (0);
}

 void BitConverterTest::exe10310()
 { 
  //  Method no 103 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<1&&xpc10nz==7/*7:xpc10nz*/)
    CVFPMULTIPLIER12_A1 = (T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP);
}

 void BitConverterTest::exe10410()
 { 
  //  Method no 104 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<1&&xpc10nz==7/*7:xpc10nz*/)
    CVFPMULTIPLIER12_A0 = (/*ub CVFPMULTIPLIER140_PR10, CVFPMULTIPLIER141_PR12, clk, reset, CVFPMULTIPLIER14_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_fail, CVFPMULTIPLIER120_PR14, CVFPMULTIPLIER121_PR16, clk, reset, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_fail, CVFPMULTIPLIER100_PR18, CVFPMULTIPLIER101_PR20, clk, reset, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_fail, T403/BitConverterTest/FloatConvTest1/0.9/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_0_GP, T403/BitConverterTest/BitConvTest/0.11/V_1_GP, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_0, T403/System/BitConverter/ToInt32/6.2/V_0, T403/BitConverterTest/RoundTripTest_Int32/1.10/V_8, @_FPD/CC/SCALbx12_ARA0, @8_US/CC/SCALbx10_ARA0, CVFPMULTIPLIER10_A0, CVFPMULTIPLIER10_A1, CVFPMULTIPLIER10_FPRR, CVFPMULTIPLIER12_A0, CVFPMULTIPLIER12_A1, CVFPMULTIPLIER12_FPRR, CVFPMULTIPLIER14_A0, CVFPMULTIPLIER14_A1, CVFPMULTIPLIER14_FPRR, xpc10nz, CVFPMULTIPLIER10RRh10hold, CVFPMULTIPLIER10RRh10shot0, CVFPMULTIPLIER10RRh10shot1, CVFPMULTIPLIER10RRh10shot2, CVFPMULTIPLIER14RRh10hold, CVFPMULTIPLIER14RRh10shot0, CVFPMULTIPLIER14RRh10shot1, CVFPMULTIPLIER14RRh10shot2, CVFPMULTIPLIER12RRh10hold, CVFPMULTIPLIER12RRh10shot0, CVFPMULTIPLIER12RRh10shot1, CVFPMULTIPLIER12RRh10shot2, clk cf 100*/100);
}

 void BitConverterTest::exe10510()
 { 
  //  Method no 105 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<1&&xpc10nz==10/*10:xpc10nz*/)
    T403_BitConverterTest_FloatConvTest1_0_9_V_0_GP = (((xpc10nz==10/*10:xpc10nz*/)?CVFPMULTIPLIER12_FPRR:CVFPMULTIPLIER12RRh10hold));
}

 void BitConverterTest::exe10610()
 { 
  //  Method no 106 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<1&&xpc10nz==10/*10:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe10710()
 { 
  //  Method no 107 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<2&&xpc10nz==15/*15:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe10810()
 { 
  //  Method no 108 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=2&&xpc10nz==15/*15:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (0);
}

 void BitConverterTest::exe10910()
 { 
  //  Method no 109 mname=BitConverterTest
    if (xpc10nz==16/*16:xpc10nz*/)
    T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0 = ((int)(((int)((unsigned char)(255&0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP)))+((unsigned char)(255&0x(-)b669fd2d+T403_BitConverterTest_BitConvTest_0_11_V_0_GP>>8))));
}

 void BitConverterTest::exe11010()
 { 
  //  Method no 110 mname=BitConverterTest
    if (xpc10nz==16/*16:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (1);
}

 void BitConverterTest::exe11110()
 { 
  //  Method no 111 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0 = ((int)(((unsigned char)(_8_US_CC_SCALbx10_ARA0[2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]))+((int)(T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0+((unsigned char)(_8_US_CC_SCALbx10_ARA0[1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]))))));
}

 void BitConverterTest::exe11210()
 { 
  //  Method no 112 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (0);
}

 void BitConverterTest::exe11310()
 { 
  //  Method no 113 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0 = ((int)(T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0+((unsigned char)(_8_US_CC_SCALbx10_ARA0[1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]))));
}

 void BitConverterTest::exe11410()
 { 
  //  Method no 114 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (1);
}

 void BitConverterTest::exe11510()
 { 
  //  Method no 115 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==17/*17:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (3);
}

 void BitConverterTest::exe11610()
 { 
  //  Method no 116 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==17/*17:xpc10nz*/)
    T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0 = ((int)(((unsigned char)(_8_US_CC_SCALbx10_ARA0[3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]))+((int)(((unsigned char)(_8_US_CC_SCALbx10_ARA0[2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]))+((int)(T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0+((unsigned char)(_8_US_CC_SCALbx10_ARA0[1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP]))))))));
}

 void BitConverterTest::exe11710()
 { 
  //  Method no 117 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==17/*17:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP);
}

 void BitConverterTest::exe11810()
 { 
  //  Method no 118 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP);
}

 void BitConverterTest::exe11910()
 { 
  //  Method no 119 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_System_BitConverter_ToInt32_6_2_V_0 = ((int)(((int)(_8_US_CC_SCALbx10_ARA0[0]))+(_8_US_CC_SCALbx10_ARA0[0x1]<<8)));
}

 void BitConverterTest::exe12010()
 { 
  //  Method no 120 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP);
}

 void BitConverterTest::exe12110()
 { 
  //  Method no 121 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_System_BitConverter_ToInt32_6_2_V_0 = ((int)(((int)(((int)(((int)(_8_US_CC_SCALbx10_ARA0[0]))+(_8_US_CC_SCALbx10_ARA0[0x1]<<8)))+(_8_US_CC_SCALbx10_ARA0[0x2]<<16)))+(_8_US_CC_SCALbx10_ARA0[0x3]<<24)));
}

 void BitConverterTest::exe12210()
 { 
  //  Method no 122 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP);
}

 void BitConverterTest::exe12310()
 { 
  //  Method no 123 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_BitConverterTest_RoundTripTest_Int32_1_10_V_8 = ((int)(((int)(((int)(((int)(_8_US_CC_SCALbx10_ARA0[0]))+(_8_US_CC_SCALbx10_ARA0[0x1]<<8)))+(_8_US_CC_SCALbx10_ARA0[0x2]<<16)))+(_8_US_CC_SCALbx10_ARA0[0x3]<<24)));
}

 void BitConverterTest::exe12410()
 { 
  //  Method no 124 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP>=0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_System_BitConverter_ToInt32_6_2_V_0 = ((int)(((int)(((int)(((int)(_8_US_CC_SCALbx10_ARA0[0]))+(_8_US_CC_SCALbx10_ARA0[0x1]<<8)))+(_8_US_CC_SCALbx10_ARA0[0x2]<<16)))+(_8_US_CC_SCALbx10_ARA0[0x3]<<24)));
}

 void BitConverterTest::exe12510()
 { 
  //  Method no 125 mname=BitConverterTest
    if (1+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&2+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP<0x4&&xpc10nz==18/*18:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (3+T403_BitConverterTest_BitConvTest_0_11_V_1_GP);
}

 void BitConverterTest::exe12610()
 { 
  //  Method no 126 mname=BitConverterTest
    if (xpc10nz==19/*19:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (T403_BitConverterTest_BitConvTest_0_11_V_1_GP+((int)(T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0)));
}

 void BitConverterTest::exe12710()
 { 
  //  Method no 127 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP<3&&xpc10nz==20/*20:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe12810()
 { 
  //  Method no 128 mname=BitConverterTest
    if (T403_BitConverterTest_BitConvTest_0_11_V_0_GP>=3&&xpc10nz==20/*20:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_0_GP = (1+T403_BitConverterTest_BitConvTest_0_11_V_0_GP);
}

 void BitConverterTest::exe12910()
 { 
  //  Method no 129 mname=BitConverterTest
    if (xpc10nz==21/*21:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (T403_BitConverterTest_BitConvTest_0_11_V_1_GP+((int)(T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0)));
}

 void BitConverterTest::exe13010()
 { 
  //  Method no 130 mname=BitConverterTest
    if (xpc10nz==21/*21:xpc10nz*/)
    T403_BitConverterTest_RoundTripTest_Int32_1_10_V_8 = ((int)(T403_System_BitConverter_ToInt32_6_2_V_0));
}

 void BitConverterTest::exe13110()
 { 
  //  Method no 131 mname=BitConverterTest
    if (xpc10nz==22/*22:xpc10nz*/)
    T403_BitConverterTest_BitConvTest_0_11_V_1_GP = (T403_BitConverterTest_BitConvTest_0_11_V_1_GP+((int)(T403_BitConverterTest_RoundTripTest_Int32_1_10_V_0)));
}

 void BitConverterTest::exe13210()
 { 
  //  Method no 132 mname=BitConverterTest
    if (xpc10nz==22/*22:xpc10nz*/)
    T403_BitConverterTest_RoundTripTest_Int32_1_10_V_8 = ((int)(((int)(T403_System_BitConverter_ToInt32_6_2_V_0+(_8_US_CC_SCALbx10_ARA0[0x2]<<16)))+(_8_US_CC_SCALbx10_ARA0[0x3]<<24)));
}

 void BitConverterTest::exe13310()
 { 
  //  Method no 133 mname=BitConverterTest
    if (xpc10nz==22/*22:xpc10nz*/)
    T403_System_BitConverter_ToInt32_6_2_V_0 = ((int)(((int)(T403_System_BitConverter_ToInt32_6_2_V_0+(_8_US_CC_SCALbx10_ARA0[0x2]<<16)))+(_8_US_CC_SCALbx10_ARA0[0x3]<<24)));
}

 void BitConverterTest::exe014()
 { 
  //  Method no 0 mname=CVFPMULTIPLIER14.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER14_FPRR = (CVFPMULTIPLIER141_PR12);
}

 void BitConverterTest::exe114()
 { 
  //  Method no 1 mname=CVFPMULTIPLIER14.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER141_PR12 = (CVFPMULTIPLIER140_PR10);
}

 void BitConverterTest::exe214()
 { 
  //  Method no 2 mname=CVFPMULTIPLIER14.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER140_PR10 = (CVFPMULTIPLIER14_A0*CVFPMULTIPLIER14_A1);
}

 void BitConverterTest::exe012()
 { 
  //  Method no 0 mname=CVFPMULTIPLIER12.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER12_FPRR = (CVFPMULTIPLIER121_PR16);
}

 void BitConverterTest::exe112()
 { 
  //  Method no 1 mname=CVFPMULTIPLIER12.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER121_PR16 = (CVFPMULTIPLIER120_PR14);
}

 void BitConverterTest::exe212()
 { 
  //  Method no 2 mname=CVFPMULTIPLIER12.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER120_PR14 = (CVFPMULTIPLIER12_A0*CVFPMULTIPLIER12_A1);
}

 void BitConverterTest::exe010()
 { 
  //  Method no 0 mname=CVFPMULTIPLIER10.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER10_FPRR = (CVFPMULTIPLIER101_PR20);
}

 void BitConverterTest::exe110()
 { 
  //  Method no 1 mname=CVFPMULTIPLIER10.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER101_PR20 = (CVFPMULTIPLIER100_PR18);
}

 void BitConverterTest::exe210()
 { 
  //  Method no 2 mname=CVFPMULTIPLIER10.CV_FP_FL3_DP_MULTIPLIER
    CVFPMULTIPLIER100_PR18 = (CVFPMULTIPLIER10_A0*CVFPMULTIPLIER10_A1);
}
// eof BitConverterTest
